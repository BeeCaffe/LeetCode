/***********************************************************************************************************************
 * Created by caffe on 2019/12/10.
 * 1266. 访问所有点的最小时间
 * 平面上有 n 个点，点的位置用整数坐标表示 points[i] = [xi, yi]。请你计算访问所有这些点需要的最小时间（以秒为单位）。

    你可以按照下面的规则在平面上移动：

        每一秒沿水平或者竖直方向移动一个单位长度，或者跨过对角线（可以看作在一秒内向水平和竖直方向各移动一个单位长度）。
        必须按照数组中出现的顺序来访问这些点。
 **********************************************************************************************************************/
/**
 * solution 1 : 分析法
 * 由于可以选择横着走，数着走和斜着走，所以，当前一点与后一点不在同一直线上的时候都选择斜着走，这时候x和y方向都可以加一
 * 所以肯定比较短时间。剩下的就沿着x或在y走了。所以实际上，前一个点到后一个点的最短时间应该是dx和dy中最大的那一个。
 * 时间复杂度：O（n）
 * 空间复杂度：O（1）
 */
class Solution {
public:
    int minTimeToVisitAllPoints(vector<vector<int>>& points) {
        int mintimes=0;
        for(int i=1;i<points.size();++i){
            int dx=abs(points[i][0]-points[i-1][0]);
            int dy=abs(points[i][1]-points[i-1][1]);
            mintimes+=max(dx,dy);
        }
        return mintimes;
    }
};